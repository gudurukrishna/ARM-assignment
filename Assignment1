;FIBONACCI SERIES
     AREA     appcode, CODE, READONLY
     EXPORT __main
	 ENTRY 
__main  FUNCTION		 		
                   MOV  r0, #0x000 ;firtst term
         MOV  r1, #0x001 ;second term
		 MOV  r2, #0x001 ; count
		 MOV  r3, #0x009 ; Number of terms in series
		 
		 CMP r2, r3 
		 IT EQ
			BEQ stop
			;ADD r7, r7, #1
LOOP	ADD r4, r0, r1  ;calculating next term
					MOV r0, r1
					MOV r1, r4
					ADD r2, r2, #1
					CMP r2, r3
					BNE LOOP
        		

         
		 
      
stop B stop ; stop program
     ENDFUNC
     END

-----------------------------------------------------------------------------------------
/*  LARGEST OF THE THREE */
;LARGEST NUMBER IS FINALLY STORED IN R4
     AREA     appcode, CODE, READONLY
     EXPORT __main
	 ENTRY 
__main  FUNCTION		 		
         MOV  r0, #0x00B ;first number
         MOV  r1, #0x00A ;second number
		 MOV  r2, #0x00C ;Third number
		 ;MOV  r3, r1 ; Number of terms in series
		CMP r0, r1 ; Compare R0 and R1, setting flags
        ITT GT ; Skip next two instructions unless GT condition holds
	    CMPGT r0, r2 ; If 'greater than', compare R2 and R0, setting flags
	    MOVGT r4, r0 ; If still 'greater than', do R4 = R0
        CMP r1, r2
		ITE GT
		MOVGT r4, r1
		MOVLE r4, r2

         
		 
      
stop B stop ; stop program
     ENDFUNC
     END
-------------------------------------------------------------------------------
/* GCD */
     AREA     appcode, CODE, READONLY
     EXPORT __main
	 ENTRY 
__main  FUNCTION		 		
         MOV  r0, #0x009 ;first number
         MOV  r1, #0x007 ;second number
LOOP 	 CMP r0, r1
		 IT EQ
		 BEQ stop
		 ITE GT
		 SUBGT r0, r0, r1
		 SUBLE r1, r1, r0
		 B LOOP
         
		 
      
stop B stop ; stop program
     ENDFUNC
     END
